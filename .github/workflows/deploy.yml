name: Deploy PCS Booking to Cloudflare Pages (Wrangler Only)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  CLOUDFLARE_PROJECT_NAME: 'pcs-booking'

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Pages

    # Only deploy on push to main, not on PRs
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Verify secrets are available
        run: |
          if [ -z "${{ secrets.CLOUDFLARE_API_TOKEN }}" ]; then
            echo "‚ùå CLOUDFLARE_API_TOKEN secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" ]; then
            echo "‚ùå CLOUDFLARE_ACCOUNT_ID secret is not set"
            exit 1
          fi
          echo "‚úÖ All required secrets are configured"

      - name: Install dependencies
        run: |
          npm install
          npm list terser || echo "‚ö†Ô∏è Terser not found, but esbuild will be used for minification"
        working-directory: packages/client

      - name: Build application
        run: npm run build
        working-directory: packages/client
        env:
          NODE_ENV: production

      - name: Verify build output
        run: |
          if [ ! -d "packages/client/dist" ]; then
            echo "‚ùå Build failed - dist directory not found"
            exit 1
          fi
          echo "‚úÖ Build successful - dist directory exists"
          ls -la packages/client/dist/

      - name: Install Wrangler CLI
        run: npm install -g wrangler@3

      - name: Deploy to Cloudflare Pages with Wrangler
        run: |
          echo "üöÄ Deploying to Cloudflare Pages using Wrangler..."
          cd packages/client
          
          # Deploy directly with Wrangler - this will create the project if it doesn't exist
          wrangler pages deploy dist \
            --project-name="${{ env.CLOUDFLARE_PROJECT_NAME }}" \
            --compatibility-flags="nodejs_compat" \
            --compatibility-date="2024-01-01"
            
          echo "‚úÖ Deployment completed successfully!"
          echo "üì± Your app is live at: https://${{ env.CLOUDFLARE_PROJECT_NAME }}.pages.dev"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Get deployment URL
        run: |
          echo "üéâ Deployment completed successfully!"
          echo "üì± React App: https://${{ env.CLOUDFLARE_PROJECT_NAME }}.pages.dev"
          echo "üåê Custom Domain: https://booking.privatecarserviceparis.com"
          echo "üìã Cloudflare Dashboard: https://dash.cloudflare.com/pages/view/${{ env.CLOUDFLARE_PROJECT_NAME }}"
          echo "‚öôÔ∏è  Configure custom domain with: wrangler pages domain add ${{ env.CLOUDFLARE_PROJECT_NAME }} booking.privatecarserviceparis.com"
