name: Deploy PCS Booking System v2.0.0 to Cloudflare Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  CLOUDFLARE_PROJECT_NAME: 'pcs-booking'

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy PCS Booking System v2.0.0

    # Only deploy on push to main/master, not on PRs
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
      - name: üöÄ Checkout repository
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: üîê Verify Cloudflare secrets
        run: |
          if [ -z "${{ secrets.CLOUDFLARE_API_TOKEN }}" ]; then
            echo "‚ùå CLOUDFLARE_API_TOKEN secret is not set"
            echo "Please add your Cloudflare API token to repository secrets"
            exit 1
          fi
          if [ -z "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" ]; then
            echo "‚ùå CLOUDFLARE_ACCOUNT_ID secret is not set"
            echo "Please add your Cloudflare Account ID to repository secrets"
            exit 1
          fi
          echo "‚úÖ All required Cloudflare secrets are configured"

      - name: üìã Display build information
        run: |
          echo "üèóÔ∏è Building PCS Booking System v2.0.0"
          echo "üì¶ Project: ${{ env.CLOUDFLARE_PROJECT_NAME }}"
          echo "üåê Target URL: https://${{ env.CLOUDFLARE_PROJECT_NAME }}.pages.dev"
          echo "üìÅ Source: packages/client"
          echo "üîß Node.js: ${{ env.NODE_VERSION }}"

      - name: Install dependencies
        run: |
          npm install
          npm list terser || echo "‚ö†Ô∏è Terser not found, but esbuild will be used for minification"
        working-directory: packages/client

      - name: Build application
        run: npm run build
        working-directory: packages/client
        env:
          NODE_ENV: production

      - name: Verify build output
        run: |
          if [ ! -d "packages/client/dist" ]; then
            echo "‚ùå Build failed - dist directory not found"
            exit 1
          fi
          echo "‚úÖ Build successful - dist directory exists"
          ls -la packages/client/dist/

      - name: Install Wrangler CLI
        run: npm install -g wrangler@3

      - name: Create Cloudflare Pages project if it doesn't exist
        run: |
          echo "üîç Checking if project '${{ env.CLOUDFLARE_PROJECT_NAME }}' exists..."

          # Try to get project info, create if it doesn't exist
          if ! wrangler pages project list | grep -q "${{ env.CLOUDFLARE_PROJECT_NAME }}"; then
            echo "üìù Project not found, creating new project..."
            wrangler pages project create "${{ env.CLOUDFLARE_PROJECT_NAME }}" --production-branch="main" --compatibility-flags="nodejs_compat"
            echo "‚úÖ Project '${{ env.CLOUDFLARE_PROJECT_NAME }}' created successfully"
          else
            echo "‚úÖ Project '${{ env.CLOUDFLARE_PROJECT_NAME }}' already exists"
          fi
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ env.CLOUDFLARE_PROJECT_NAME }}
          directory: packages/client/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          wranglerVersion: '3'

      - name: Deployment Success
        run: |
          echo "üéâ Deployment completed successfully!"
          echo "üì± React App: https://${{ env.CLOUDFLARE_PROJECT_NAME }}.pages.dev"
          echo "üåê Custom Domain: https://booking.privatecarserviceparis.com"
          echo "‚öôÔ∏è  Configure custom domain with: wrangler pages domain add ${{ env.CLOUDFLARE_PROJECT_NAME }} booking.privatecarserviceparis.com"
